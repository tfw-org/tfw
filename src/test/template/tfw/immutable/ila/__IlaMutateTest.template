// booleanila,byteila,charila,doubleila,floatila,intila,longila,objectila,shortila
package %%PACKAGE%%;

import static org.assertj.core.api.Assertions.assertThatThrownBy;

%%RANDOM_INCLUDE%%import org.junit.jupiter.api.Test;
import tfw.immutable.ila.IlaTestDimensions;

final class %%NAME%%IlaMutateTest {
    @Test
    void argumentsTest() throws Exception {
        %%RANDOM_INIT%%final %%NAME%%Ila%%TEMPLATE%% ila = %%NAME%%IlaFromArray.create(new %%TYPE%%[10]);
        final long ilaLength = ila.length();
        final %%TYPE%% value = %%RANDOM_VALUE%%;

        assertThatThrownBy(() -> %%NAME%%IlaMutate.create(null, 0, value))
                .isInstanceOf(IllegalArgumentException.class)
                .hasMessage("ila == null not allowed!");
        assertThatThrownBy(() -> %%NAME%%IlaMutate.create(ila, -1, value))
                .isInstanceOf(IllegalArgumentException.class)
                .hasMessage("index (=-1) < 0 not allowed!");
        assertThatThrownBy(() -> %%NAME%%IlaMutate.create(ila, ilaLength, value))
                .isInstanceOf(IllegalArgumentException.class)
                .hasMessage("index (=10) >= ila.length() (=10) not allowed!");
    }

    @Test
    void allTest() throws Exception {
        %%RANDOM_INIT%%final int length = IlaTestDimensions.defaultIlaLength();
        final %%TYPE%%[] array = new %%TYPE%%[length];
        final %%TYPE%%[] target = new %%TYPE%%[length];
        for (int index = 0; index < length; ++index) {
            for (int ii = 0; ii < array.length; ++ii) {
                array[ii] = target[ii] = %%RANDOM_VALUE%%;
            }
            final %%TYPE%% value = %%RANDOM_VALUE%%;
            target[index] = value;
            %%NAME%%Ila%%TEMPLATE%% origIla = %%NAME%%IlaFromArray.create(array);
            %%NAME%%Ila%%TEMPLATE%% targetIla = %%NAME%%IlaFromArray.create(target);
            %%NAME%%Ila%%TEMPLATE%% actualIla = %%NAME%%IlaMutate.create(origIla, index, value);

            %%NAME%%IlaCheck.check(targetIla, actualIla);
        }
    }
}
