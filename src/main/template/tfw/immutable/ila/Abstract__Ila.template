// booleanila,byteila,charila,doubleila,floatila,intila,longila,objectila,shortila
package %%PACKAGE%%;

import java.io.IOException;
import tfw.check.Argument;
import tfw.immutable.ila.AbstractIla;

public abstract class Abstract%%NAME%%Ila%%TEMPLATE%% extends AbstractIla implements %%NAME%%Ila%%TEMPLATE%% {
    protected abstract void getImpl(final %%TYPE_OR_TEMPLATE%%[] array, int offset, long start, int length) throws IOException;

    protected Abstract%%NAME%%Ila() {}

    @Override
    public final void get(final %%TYPE_OR_TEMPLATE%%[] array, final int offset, final long start, int length) throws IOException {
        if (length == 0) {
            return;
        }

        Argument.assertNotNull(array, "array");
        boundsCheck(array.length, offset, start, length);
        getImpl(array, offset, start, length);
    }
}
